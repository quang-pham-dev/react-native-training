// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Brand detail Screen Brand detail Screen Should render correctly 1`] = `
<View
  pBottom={30}
  pTop={115}
  style={
    Array [
      Object {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingHorizontal": 20,
        "paddingTop": 115,
        "width": "100%",
      },
    ]
  }
>
  <View
    pBottom={20}
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1D1E20",
              "fontFamily": "Inter-Medium",
              "fontSize": 17,
              "lineHeight": 16,
              "textAlign": "left",
            },
          ]
        }
        type="brandDetailItemCount"
      >
        0 Items
      </Text>
      <Text
        mTop={5}
        style={
          Array [
            Object {
              "color": "#8F959E",
              "fontFamily": "Inter-Regular",
              "fontSize": 15,
              "lineHeight": 16,
              "marginTop": 5,
              "textAlign": "left",
            },
          ]
        }
        type="brandDetailTitle"
      >
        Available in stock
      </Text>
    </View>
    <View
      bRadius={10}
      bgColor="#F5F6FA"
      h={37}
      pHorizontal={10}
      pVertical={10}
      style={
        Array [
          Object {
            "backgroundColor": "#F5F6FA",
            "borderRadius": 10,
            "height": 37,
            "paddingHorizontal": 10,
            "paddingVertical": 10,
            "width": 71,
          },
        ]
      }
      w={71}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "black",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Design Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            ó°’¿
          </Text>
        </View>
        <Text
          mLeft={5}
          style={
            Array [
              Object {
                "marginLeft": 5,
                "textAlign": "left",
              },
            ]
          }
        >
          Sort
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={6}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={null}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={16}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        No products found
      </Text>
      <View
        onLayout={[Function]}
      />
    </View>
  </RCTScrollView>
</View>
`;
