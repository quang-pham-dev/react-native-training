// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Brand detail Screen should render correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "justifyContent": "space-between",
      "paddingHorizontal": 20,
    }
  }
>
  <View
    style={
      Object {
        "height": 120,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginTop": 45,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Image
          source={1}
          style={
            Object {
              "height": 45,
              "width": 45,
            }
          }
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            Object {
              "backgroundColor": "#F5F6FA",
              "borderRadius": 10,
              "height": 45,
              "padding": 10,
              "width": 70,
            }
          }
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Image
          source={1}
          style={
            Object {
              "height": 45,
              "width": 45,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <View>
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "textTransform": "none",
              },
              Object {
                "color": "#8F959E",
                "fontFamily": "Inter_400Regular",
                "fontSize": 15,
                "lineHeight": 16,
                "marginTop": 5,
              },
            ]
          }
        >
          Available in stock
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#F5F6FA",
            "borderRadius": 10,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "padding": 10,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text />
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000",
                "textTransform": "none",
              },
              Object {
                "marginLeft": 5,
              },
            ]
          }
        >
          Sort
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "marginBottom": 70,
          "marginTop": 15,
        }
      }
    >
      <RCTScrollView
        ListEmptyComponent={[Function]}
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsVerticalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View>
            <Text
              style={
                Array [
                  Object {
                    "color": "#1D1E20",
                    "fontSize": 17,
                  },
                  Object {
                    "color": "#1D1E20",
                    "fontFamily": "Inter_400Regular",
                    "fontSize": 17,
                  },
                ]
              }
            >
              No Products!
            </Text>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
